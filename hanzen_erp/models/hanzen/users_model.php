<?php/** * User model * table name 'users' **/class Users_model extends HZ_Model{public $table;public $data;	public function __CONSTRUCT(){		$this->table = array(			'users' => $this->db->dbprefix('users'),		);		parent::__CONSTRUCT();	}	/**	 * Get data information user account	 * @param $index string	 * @param $param string (optional) attribute from table users default 'username'	 * @return array	 **/	public function getData($index = null,$param = 'username'){		$query = $this->db->get_where($this->table['users'],array($param => $index),1);		if($query->num_rows() > 0){			$data = $query->result_array();			$this->data = $data[0];			return $this->data;		}		else{ return array();}	}	/**	 * Login user function	 * @param $data array([username], [password])	 * @return none	 **/	public function login($data = array()){		if($this->getData($data['username'])){			if($this->data['password'] == md5($data['password'])){				if(!$this->isConnected($this->data['ping'])){					if($this->data['error_login'] <= $this->config->item('wrong_password') AND $this->data['active'] == 1){						$this->db->where(array('username'=>$this->data['username']));						$this->db->update($this->table['users'],array(							'last_ip'	=> $_SERVER['REMOTE_ADDR'],							'last_login'	=> time(),							'error_login' => 0,						));					}					else{$this->error->set($this->error_lang['user_block']);}				}				else{$this->error->set('('.$data['username'].') '.$this->error_lang['was_login'].' IP :'.$this->data['last_ip']);}			}			else{				$this->db->where(array('username'=>$this->data['username']));				$this->db->update($this->table['users'],array('error_login' => $this->data['error_login']+1));				$this->error->set($this->error_lang['wrong_pass']);			}		}		else{			$this->error->set($this->error_lang['not_register']);		}		if(!$this->error->isError()){			$this->session->set_userdata(array(				'username' => $this->data['username'],				'id_user'	=> $this->data['id_user'],				'id_group'	=> $this->data['user_group_id']			));		}	}	/**	 * Check user is login	 * @return booelan	 */	public function isLogin(){		$session = $this->session->all_userdata();		if(isset($session['username']) and isset($session['id_user'])){			return true;		}		else{$this->error->set($this->error_lang['not_login']);}	}	/**	 * Reset count fail login user	 * @param $username string	 * @return array	 */	public function resetErrorLogin($username){		$this->db->where(array('username'=>$username));		return $this->db->update($this->table['users'],array('error_login' => 0));	}	/**	 * Ping username	 * @param $username	 * @return none	 */	public function ping(){		$this->db->where('id_user',$this->session->userdata('id_user'));		$this->db->update($this->table['users'],array('ping' => time()));	}	/**	 * Check user are connected	 * @param $time	 * @return booelan	 **/	public function isConnected($time){		if(!empty($time) AND time() <= ($time+$this->config->item('hnz_user_delay_ping'))){	return true;}	}}?>